apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    io.kompose.service: mysql
  name: mysql
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata: 
      labels:
        io.kompose.service: mysql
    spec:      
      containers:
      - env:
        - name: MYSQL_DATABASE
          value: mysql
        - name: MYSQL_PASSWORD
          value: dummytodos
        - name: MYSQL_ROOT_PASSWORD
          value: dummypassword
        - name: MYSQL_USER
          value: todos-user
        args: ["--default-authentication-plugin=mysql_native_password"]        
        image: mysql:8.0        
        # args:
        # - "--ignore-db-dir=lost+found" #CHANGE
        name: mysql
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-database-data-volume
      restartPolicy: Always
      volumes:
      - name: mysql-database-data-volume
        persistentVolumeClaim:
          claimName: mysql-database-data-volume
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.20.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: mysql
  name: mysql
spec:
  type: LoadBalancer
  ports:
  - name: "3306"
    port: 3306
    targetPort: 3306
  selector:
    io.kompose.service: mysql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata: 
  creationTimestamp: null
  labels:
    io.kompose.service: mysql-database-data-volume
  name: mysql-database-data-volume
spec:
  storageClassName: mysql-database-ssd
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: mysql-database-ssd
provisioner: kubernetes.io/aws-ebs
parameters:
